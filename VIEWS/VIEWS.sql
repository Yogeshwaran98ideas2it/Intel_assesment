CREATE OR REPLACE VIEW v_order_header AS
SELECT
    ORDER_ID,
    ORDER_DATE,
    STATUS,
    CUSTOMER_ID,
    ITEM_COUNT,
    TOTAL_AMOUNT,
    DISCOUNT,
    CREATE_DATE AS ORDER_CREATE_DATE,
    CREATE_USER AS ORDER_CREATE_USER,
    COUPON_CODE
FROM
    ORDER_BASE.ORDER_HEADER;

CREATE OR REPLACE VIEW v_customer AS
SELECT
    CUSTOMER_ID,
    ADDRESS,
    PHONE_NO,
    STATUS AS CUSTOMER_STATUS,
    CATEGORY AS CUSTOMER_CATEGORY,
    TOTAL_ORDERS,
    TOTAL_INVOICE_AMOUNT,
    LOYALTY_POINTS,
    CREATE_DATE AS CUSTOMER_CREATE_DATE,
    CREATE_USER AS CUSTOMER_CREATE_USER
FROM
    ORDER_BASE.CUSTOMER;

CREATE OR REPLACE VIEW v_order_detail AS
SELECT
    ORDER_ID,
    ORDER_DATE,
    CUSTOMER_ID,
    ITEM_ID,
    QTY,
    TOTAL_AMOUNT,
    CREATE_DATE AS DETAIL_CREATE_DATE,
    CREATE_USER AS DETAIL_CREATE_USER
FROM
    ORDER_BASE.ORDER_DETAIL;

CREATE OR REPLACE VIEW v_promotion AS
SELECT
    PROMOTION_ID,
    CUSTOMER_CATEGORY,
    PROMOTION_TYPE,
    PROMOTION_VALUE,
    COMMENT AS PROMOTION_COMMENT
FROM
    ORDER_BASE.PROMOTION;

create or replace view INTEL_ASSESMENT.ORDER_BASE.V_INVOICE(
	ORDER_ID,
	ORDER_DATE_HEADER,
	CREATE_DATE,
	TAX_AMOUNT,
	TOTAL_AMOUNT,
	DISCOUNT,
	FINAL_INVOICE_AMT,
	CUSTOMER_ID,
	ORDER_HEADER_CREATE_DATE,
	CREATE_USER
) as
SELECT 
    od.ORDER_ID,
    oh.ORDER_DATE AS ORDER_DATE_HEADER,
    od.create_date,
    0.09 AS TAX_AMOUNT,
    oh.TOTAL_AMOUNT,
    oh.DISCOUNT,
    (oh.total_amount + 0.09) - oh.discount AS FINAL_INVOICE_AMT,
    oh.CUSTOMER_ID,
    oh.CREATE_DATE AS ORDER_HEADER_CREATE_DATE,
    oh.CREATE_USER
FROM 
    ORDER_BASE.ORDER_HEADER oh
JOIN 
    ORDER_BASE.ORDER_DETAIL od ON oh.customer_id = od.customer_id
JOIN 
    ORDER_BASE.CUSTOMER c ON oh.CUSTOMER_ID = c.CUSTOMER_ID
WHERE 
    oh.ORDER_DATE > CURRENT_DATE() AND
    c.STATUS = 'Active';
