create or replace table ORDER_BASE.ORDER_HEADER (
    ORDER_ID VARCHAR(10) UNIQUE,
    ORDER_DATE DATE,
    STATUS VARCHAR(10),
    CUSTOMER_ID VARCHAR(10),
    ITEM_COUNT INTEGER,
    TOTAL_AMOUNT NUMERIC(12,2),
    DISCOUNT NUMERIC(10,2),
    CREATE_DATE DATE,
    CREATE_USER VARCHAR(10),
    COUPON_CODE VARCHAR(10)
);

CREATE TABLE ORDER_BASE.CUSTOMER (
    CUSTOMER_ID VARCHAR(10) PRIMARY KEY,
    ADDRESS VARCHAR(50),
    PHONE_NO VARCHAR(10),
    STATUS VARCHAR(10),
    CATEGORY VARCHAR(10),
    TOTAL_ORDERS INTEGER,
    TOTAL_INVOICE_AMOUNT NUMERIC(12,2),
    LOYALTY_POINTS NUMERIC(12,2),
    CREATE_DATE DATE,
    CREATE_USER VARCHAR(10)
);

CREATE TABLE ORDER_BASE.ORDER_DETAIL (
    ORDER_ID VARCHAR(10),
    ORDER_DATE DATE,
    CUSTOMER_ID VARCHAR(10),
    ITEM_ID VARCHAR(10),
    QTY INTEGER,
    TOTAL_AMOUNT NUMERIC(12,2),
    CREATE_DATE DATE,
    CREATE_USER VARCHAR(10),
    PRICE NUMERIC(12,2),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDER_HEADER(ORDER_ID)
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
);

CREATE TABLE ORDER_BASE.PROMOTION (
    PROMOTION_ID VARCHAR(10),
    CUSTOMER_CATEGORY VARCHAR(10),
    PROMOTION_TYPE VARCHAR(10),
    PROMOTION_VALUE  NUMERIC(10,2),
    COMMENT VARCHAR(20),
     CONSTRAINT fk_customer_category
        FOREIGN KEY (CUSTOMER_CATEGORY) 
        REFERENCES ORDER_BASE.CUSTOMER (CATEGORY)
);

CREATE TABLE INVOICE (
    ORDER_ID VARCHAR(10) UNIQUE,
    ORDER_DATE DATE,
    INVOICE_DATE DATE,
    TAX_AMOUNT NUMERIC(10,2),
    TOTAL_AMOUNT NUMERIC(12,2),
    TOTAL_ORDERS INTEGER,
    DISCOUNT NUMERIC(10,2),
    FINAL_INVOICE_AMT NUMERIC(12,2),
    CREATE_DATE DATE,
    CREATE_USER VARCHAR(10),
    FOREIGN KEY (ORDER_ID) REFERENCES ORDER_HEADER(ORDER_ID)
);